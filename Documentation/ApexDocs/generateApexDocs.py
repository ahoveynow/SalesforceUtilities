# run "python generateApexDocs.py" to execute this file.
# SfApexDoc.jar must be in the same directory that this file is in.

import subprocess
import os
import shutil
import time

# CONFIGURE THESE VARIABLES FOR YOUR FOLDER STRUCTURE (ALL VARIABLES ARE RELATIVE TO THIS FILE'S LOCATION):
rootdir = './' # The root directory
documentationFolder = rootdir + 'documentation/apex/'  # The directory that will contain the generated documentation
tempdir = 'documentation/temp/' # The directory that will temporarily hold a copy of the .cls files during doc generation
codeRootDir = rootdir + 'force-app' # The directory to recursively traverse to find all .cls files
keepBackupFolder = False # Keep a backup of documentation prior to new generation (backup will always be kept if there is a failure)
deleteLogFile = True # Delete the log file generated by SfApexDoc


# Internal Use:
absoluteRootDir = os.path.join(os.getcwd(),rootdir)
absoluteDocumentationFolder = os.path.join(os.getcwd(),documentationFolder)
backupFolderName = absoluteDocumentationFolder.rstrip('/\\') + '-backup' + str(int(time.time()))

# Remove existing temp folder that holds .cls files (if it exists), and create fresh
if os.path.isdir(tempdir):
    shutil.rmtree(tempdir)
os.mkdir(tempdir)

# Iterate through file structure and find all .cls files
for dirName, subdirList, fileList in os.walk(codeRootDir):
    for fileName in fileList:
        if fileName.endswith('.cls'):
            source = dirName + '/' + fileName
            shutil.copy(source, tempdir + fileName)

# Ensure we have a backup of existing documentation in the event of failure
if os.path.isdir(documentationFolder):
    os.rename(absoluteDocumentationFolder, backupFolderName)

# Generate Documentation
subprocess.call(['java', '-jar', 'SfApexDoc.jar', '-s', tempdir, '-t', documentationFolder])

# Hoist default "SfApexDocs" folder into specified documentation folder
for filename in os.listdir(os.path.join(absoluteDocumentationFolder, 'SfApexDocs')):
    shutil.move(os.path.join(absoluteDocumentationFolder, 'SfApexDocs', filename), os.path.join(absoluteDocumentationFolder, filename))
os.rmdir(absoluteDocumentationFolder + '/SfApexDocs')

# Remove temp folder
if os.path.isdir(tempdir):
    shutil.rmtree(tempdir)

# Remove log file
logFile = 'SfApexDocLog.txt'
if deleteLogFile == True and os.path.exists(logFile):
    os.remove(logFile)

# Remove backup folder (Stale Documentation)
if keepBackupFolder == False and os.path.isdir(backupFolderName):
    shutil.rmtree(backupFolderName)